/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        hml_s: hml_s {
            compatible = "zmk,behavior-hold-tap";
            label = "HML_S";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            hold-trigger-on-release;
            require-prior-idle-ms = <120>;
            hold-trigger-key-positions = <36 37 38 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
        };

        hmr_s: hmr_s {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR_S";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            hold-trigger-on-release;
            require-prior-idle-ms = <120>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
        };

        hm_a: hm_a {
            compatible = "zmk,behavior-hold-tap";
            label = "HM_A";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <280>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <200>;
        };

        hm_c: hm_c {
            compatible = "zmk,behavior-hold-tap";
            label = "HM_C";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-while-undecided;
        };
    };

    combos {
        compatible = "zmk,combos";

        QM {
            bindings = <&none>;
            key-positions = <16 34>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            display-name = "Base";
            bindings = <
&kp TAB    &kp Q             &kp W             &kp E          &kp R                &kp T        &kp Y      &kp U                 &kp I          &kp O              &kp P                 &kp BSPC
&mo 2      &hm_a LEFT_WIN A  &hm_a LEFT_ALT S  &hm_c LCTRL D  &hml_s LEFT_SHIFT F  &kp G        &kp H      &hmr_s RIGHT_SHIFT J  &hm_c RCTRL K  &hm_a RIGHT_ALT L  &hm_a RWIN SEMICOLON  &kp SQT
&kp LCTRL  &kp Z             &kp X             &kp C          &kp V                &kp B        &kp N      &kp M                 &kp COMMA      &kp DOT            &kp FSLH              &kp LG(SPACE)
                                               &lt 3 ESCAPE   &lt 1 SPACE          &kp ENTER    &kp SPACE  &lt 1 SPACE           &lt 3 ESCAPE
            >;
        };

        Numbers {
            display-name = "Num";
            bindings = <
&kp GRAVE  &kp N1    &kp N2        &kp N3     &kp N4     &kp N5    &kp N6  &kp N7     &kp N8     &kp N9         &kp N0    &kp BSPC
&trans     &kp LWIN  &kp LEFT_ALT  &kp LCTRL  &kp LSHFT  &trans    &trans  &kp RSHFT  &kp RCTRL  &kp RIGHT_ALT  &kp RWIN  &trans
&trans     &trans    &trans        &trans     &trans     &trans    &trans  &trans     &trans     &trans         &trans    &trans
                                   &trans     &trans     &trans    &trans  &trans     &trans
            >;
        };

        Navigation {
            display-name = "Nav";
            bindings = <
&trans  &none         &none     &none      &none      &none     &kp PG_UP      &kp BACKSPACE  &kp UP      &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp NON_US_BACKSLASH
&trans  &kp LEFT_WIN  &kp LALT  &kp LCTRL  &kp LSHFT  &none     &kp PAGE_DOWN  &kp LEFT       &kp DOWN    &kp RIGHT         &kp MINUS          &kp EQUAL
&trans  &none         &none     &none      &none      &none     &kp HOME       &kp END        &kp INSERT  &kp DELETE        &kp QMARK          &trans
                                &trans     &trans     &trans    &trans         &trans         &trans
            >;
        };

        Functional {
            display-name = "Fn";
            bindings = <
&kp TAB  &kp F1        &kp F2        &kp F3        &kp F4     &kp F5          &kp F6        &kp F7     &kp F8     &kp F9         &kp F10   &kp F11
&trans   &kp LWIN      &kp LEFT_ALT  &kp LCTRL     &kp LSHFT  &out OUT_TOG    &kp C_VOL_UP  &kp RSHFT  &kp RCTRL  &kp RIGHT_ALT  &kp RWIN  &kp F12
&trans   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_CLR    &none      &none           &kp C_VOL_DN  &none      &none      &none          &none     &kp CAPS
                                     &kp LEFT_ALT  &trans     &trans          &trans        &trans     &trans
            >;
        };

        System {
            display-name = "Sys";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        Extra {
            display-name = "Extra";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        NumFn {
            if-layers = <1 3>;
            then-layer = <4>;
        };
    };
};
